name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: PUBLIC_KEY="${{ secrets.PUBLIC_KEY }}" PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}" REMOTE_ADDRESS="${{ secrets.REMOTE_ADDRESS }}" cargo build -p doe-control-server -p doe-control-server/src-tauri -p doe-control-admin
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Run tests
      run: PUBLIC_KEY="${{ secrets.PUBLIC_KEY }}" PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}" REMOTE_ADDRESS="${{ secrets.REMOTE_ADDRESS }}" cargo test -p doe-control-server -p doe-control-server/src-tauri -p doe-control-admin
  clippy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Run clippy
      run: PUBLIC_KEY="${{ secrets.PUBLIC_KEY }}" PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}" REMOTE_ADDRESS="${{ secrets.REMOTE_ADDRESS }}" cargo clippy -p doe-control-server -p doe-control-server/src-tauri -p doe-control-admin
  shuttle-deploy:
    runs-on: ubuntu-latest
    needs: [build, test, clippy]
    steps:
    - uses: actions/checkout@v4
    - name: Run shuttle login
      working-directory: ./doe-control-server
      run: cargo shuttle login --api-key "${{ secrets.SHUTTLE_API_KEY }}" && PUBLIC_KEY="${{ secrets.PUBLIC_KEY }}" PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}" REMOTE_ADDRESS="${{ secrets.REMOTE_ADDRESS }}" cargo shuttle deploy --no-follow --name "${{ secrets.SHUTTLE_PROJECT_ID }}"
